{"version":3,"sources":["utils/toasterCongig.js","store/auth/action.js","utils/ApiServices.js","components/Error/index.jsx","assets/icons/logo.svg","pages/ForgotPage/ForgotPage.jsx"],"names":["toasterConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","onLogin","values","history","dispatch","a","type","authTypes","LOGIN_REQUEST","httpServices","post","res","LOGIN_FINISH","payload","name","data","email","Cookies","set","tokens","push","LOGIN_FAIL","status","toast","error","errors","non_field_errors","logOut","remove","onSignup","SIGNUP_REQUEST","SIGNUP_FINISH","token","SIGNUP_FAIL","registerWithGoogle","value","username","access","contactVerify","CONTACT_VERIFY_REQUEST","contact","toString","CONTACT_VERIFY_FINISH","success","message","CONTACT_VERIFY_FAIL","requestRestEmail","EMAIL_VERIFY_REQUEST","EMAIL_VERIFY_FINISH","EMAIL_VERIFY_FAIL","resetPassword","patch","refreshPage","get","REFRESH","axios","defaults","baseURL","process","withCredentials","responseBody","response","interceptors","request","use","config","headers","Authorization","console","log","Promise","reject","requests","url","params","then","body","put","delete","postForm","putForm","Error","touched","className","validationSchema","Yup","required","ForgotPage","isLoading","useSelector","state","authReducer","useDispatch","useHistory","useFormik","initialValues","onSubmit","handleSubmit","handleChange","handleBlur","t","useTranslation","src","TitleIcon","alt","htmlFor","onChange","onBlur","autoComplete","color"],"mappings":"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","file":"static/js/17.ca455445.chunk.js","sourcesContent":["const toasterConfig = {\n  position: \"top-right\",\n  autoClose: 2000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: false,\n  progress: undefined,\n};\n\nexport default toasterConfig;\n","import { authTypes } from \"./types\";\nimport { toast } from \"react-toastify\";\nimport httpServices from \"../../utils/ApiServices\";\nimport toasterConfig from \"../../utils/toasterCongig\";\nimport Cookies from \"js-cookie\";\n\n\nexport const onLogin = (values, history) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.LOGIN_REQUEST });\n    const res = await httpServices.post(\"authentication/login/\", values);\n    dispatch({\n      type: authTypes.LOGIN_FINISH,\n      payload: { name: res.data.name, email: res.data.email },\n    });\n    Cookies.set(\"sheToken\", res.data.tokens);\n    history.push(\"/\");\n  } catch (error) {\n    dispatch({ type: authTypes.LOGIN_FAIL });\n    if (error && error.status === 500) {\n      toast.error(error.data.errors.non_field_errors, toasterConfig);\n    } else if (error && error.status === 400) {\n      toast.error(error.data.errors.error[0], toasterConfig);\n    }\n  }\n};\n\nexport const logOut = (history) => async (dispatch) => {\n  Cookies.remove(\"sheToken\");\n  dispatch({ type: authTypes.LOGIN_FAIL });\n  history.push(\"/login\");\n};\n\nexport const onSignup = (values, history) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.SIGNUP_REQUEST });\n    const res = await httpServices.post(\"authentication/register/\", values);\n    dispatch({ type: authTypes.SIGNUP_FINISH, payload: values });\n    Cookies.set(\"sheToken\", res.data.token);\n    history.push(\"/\");\n  } catch (error) {\n    dispatch({ type: authTypes.SIGNUP_FAIL });\n    if (error?.status === 400) {\n      toast.error(error.data.errors.error[0], toasterConfig);\n    } else if (error?.status === 500) {\n      toast.error(\"Not valid OTP\", toasterConfig);\n    }\n  }\n};\n\nexport const registerWithGoogle = (value, history) => async (dispatch) => {\n  try {\n    const res = await httpServices.post(\"social_auth/google/\", value);\n    dispatch({\n      type: authTypes.LOGIN_FINISH,\n      payload: { name: res.data.username, email: res.data.email },\n    });\n    Cookies.set(\"sheToken\", res.data.tokens.access);\n    history.push(\"/\");\n  } catch (err) {\n    toast.error(\"Google Login failed.\", toasterConfig);\n  }\n};\n\nexport const contactVerify = (value) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.CONTACT_VERIFY_REQUEST });\n    const res = await httpServices.post(`authentication/user-send-otp/`, {\n      contact: value.contact.toString(),\n    });\n    dispatch({ type: authTypes.CONTACT_VERIFY_FINISH });\n    toast.success(res.message, toasterConfig);\n  } catch (error) {\n    dispatch({ type: authTypes.CONTACT_VERIFY_FAIL });\n    if (error?.status === 400) {\n      toast.error(\"Invalid mobile number.\");\n    }\n  }\n};\n\nexport const requestRestEmail = (values, history) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.EMAIL_VERIFY_REQUEST });\n    const res = await httpServices.post(\n      \"authentication/request-reset-email/\",\n      values,\n    );\n    dispatch({ type: authTypes.EMAIL_VERIFY_FINISH });\n    history.push(\"/login\");\n    toast.success(res.data.success, toasterConfig);\n  } catch (error) {\n    dispatch({ type: authTypes.EMAIL_VERIFY_FAIL });\n    toast.error(\"E-mail not found\", toasterConfig);\n  }\n};\n\nexport const resetPassword = (values, history) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.EMAIL_VERIFY_REQUEST });\n    const res = await httpServices.patch(\n      \"authentication/password-reset-complete/\",\n      values,\n    );\n    dispatch({ type: authTypes.EMAIL_VERIFY_FINISH });\n    history.push(\"/login\");\n    toast.success(res.data.message, toasterConfig);\n  } catch (error) {\n    toast.error(\"Internal Server Error\", toasterConfig);\n  }\n};\n\nexport const refreshPage = () => async (dispatch) => {\n  const token = Cookies.get(\"sheToken\");\n  if (token) {\n    dispatch({ type: authTypes.REFRESH });\n  }\n};\n","import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.withCredentials = true;\n\nconst responseBody = (response) => response.data;\n\naxios.interceptors.request.use((config) => {\n  const token = Cookies.get(\"sheToken\");\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\naxios.interceptors.response.use(\n  async (response) => {\n    return response;\n  },\n  (error) => {\n    // eslint-disable-next-line\n    const { data, status } = !error.response;\n    switch (status) {\n      case 401:\n        console.log(\"Logout user!\");\n        break;\n      case 403:\n        console.log(\"You are not allowed to do that!\");\n        break;\n      default:\n        break;\n    }\n    return Promise.reject(error.response);\n  },\n);\n\nconst requests = {\n  get: (url, params) => axios.get(url, { params }).then(responseBody),\n  post: (url, body) => axios.post(url, body).then(responseBody),\n  put: (url, body) => axios.put(url, body).then(responseBody),\n  patch: (url, body) => axios.patch(url, body).then(responseBody),\n  delete: (url) => axios.delete(url).then(responseBody),\n  postForm: (url, data) =>\n    axios\n      .post(url, data, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      })\n      .then(responseBody),\n  putForm: (url, data) =>\n    axios\n      .put(url, data, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      })\n      .then(responseBody),\n};\n\nexport function createFormData(item) {\n  let formData = new FormData();\n  for (const key in item) {\n    formData.append(key, item[key]);\n  }\n  return formData;\n}\n\nexport default requests;\n","import React from \"react\";\nimport \"./index.scss\";\n\nfunction Error({ error, touched }) {\n  return (\n    <>\n      <div className='text-danger err'>{error && touched ? error : null}</div>\n    </>\n  );\n}\n\nexport default Error;\n","export default __webpack_public_path__ + \"static/media/logo.f7da92ab.svg\";","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport TitleIcon from \"../../assets/icons/logo.svg\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { CircularProgress } from \"@mui/material\";\n\nimport Error from \"../../components/Error\";\nimport \"../Common.scss\";\nimport { requestRestEmail } from \"../../store/auth/action\";\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email(\"Invalid emial\").required(\"Email is required\"),\n});\n\nfunction ForgotPage() {\n  const { isLoading } = useSelector((state) => state.authReducer);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { handleSubmit, handleChange, handleBlur, values, errors, touched } =\n    useFormik({\n      initialValues: {\n        email: \"\",\n      },\n      validationSchema,\n      onSubmit(values) {\n        dispatch(requestRestEmail(values, history));\n      },\n    });\n\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className='container'>\n        <div className='logo_1'>\n          <img src={TitleIcon} alt='...' />\n        </div>\n\n        <div className='main_div'>\n          <h3 className='text-center'>{t(\"forgot.heading\")}</h3>\n          <div className='row'>\n            <div className='col-sm-4 col-md-4'></div>\n            <div className='col-sm-4 col-md-4'>\n              <form className='set_form' onSubmit={handleSubmit}>\n                <div className='err'>\n                  <label htmlFor='email'>\n                    {t(\"forgot.label\")} <span>*</span>\n                  </label>\n                  <input\n                    name='email'\n                    type='email'\n                    className='w-100 mt-2'\n                    onChange={handleChange}\n                    value={values.email}\n                    onBlur={handleBlur}\n                    autoComplete='off'\n                  />\n                  <Error error={errors.email} touched={touched.email} />\n                </div>\n\n                <button className='w-100 my-4 login-button' type='submit'>\n                  {isLoading ? (\n                    <CircularProgress color='secondary' className='my-2' />\n                  ) : (\n                    t(\"forgot.button\")\n                  )}\n                </button>\n              </form>\n            </div>\n            <div className='col-sm-4 col-md-4'></div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ForgotPage;\n"],"sourceRoot":""}