{"version":3,"sources":["pages/CourseTest/index.jsx"],"names":["IOSSlider","styled","Slider","theme","color","palette","mode","marginTop","height","padding","fontSize","fontWeight","top","backgroundColor","text","primary","display","CourseTest","React","useState","questionNumber","setQuestionNumber","answer","setAnswer","showTimer","setShowTimer","timer","setTimer","check1","setCheck1","check2","setCheck2","check3","setCheck3","check4","setCheck4","history","useHistory","dispatch","useDispatch","detect","useDeviceDetect","id","useParams","t","useTranslation","useSelector","state","coursesReducer","question","questionCount","isLoading","progress","Math","round","total_course_que","useEffect","getUserTestQuestion","testCountSummery","isMobile","toast","error","push","routingConstants","HOME_PAGE","optionA","optionB","optionC","optionD","counse_time","parseInt","value","handleAnswerCheck","e","target","labels","children","innerText","loginPage","page","className","md","xs","spacing","direction","count","valueLabelFormat","valueLabelDisplay","disabled","renderProgress","src","time","alt","initialTime","checkpoints","callback","endTest","COURSES_RESULT","Hours","Minutes","Seconds","name","control","checked","onChange","label","onClick","prev","prev_module","data","course_test","postAnswer","position","handleFinishQuestion","newProgress","user_course_test_count","next_module","handleNextQuestion","Array","keys","map","obj"],"mappings":"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","file":"static/js/39.addf85ad.chunk.js","sourcesContent":["import {\n  Container,\n  FormControlLabel,\n  Radio,\n  RadioGroup,\n  Skeleton,\n} from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport Stack from \"@mui/material/Stack\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport useDeviceDetect from \"../../hooks/useDeviceDetect\";\nimport Slider from \"@mui/material/Slider\";\nimport Timer from \"react-compound-timer\";\n\nimport { Header, Footer } from \"../../components\";\n\nimport \"./index.scss\";\nimport \"../CoursesModule/index.scss\";\n\nimport time from \"../../assets/images/Courses/time.png\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  endTest,\n  getUserTestQuestion,\n  postAnswer,\n  testCountSummery,\n} from \"../../store/courses/action\";\nimport { styled } from \"@mui/material/styles\";\nimport { routingConstants } from \"../../utils/constants\";\nimport { useTranslation } from \"react-i18next\";\n\nconst IOSSlider = styled(Slider)(({ theme }) => ({\n  color: theme.palette.mode === \"dark\" ? \"#3880ff\" : \"#3880ff\",\n  marginTop: 20,\n  height: 10,\n  padding: \"15px 0\",\n\n  \"& .MuiSlider-valueLabel\": {\n    fontSize: 12,\n    fontWeight: \"normal\",\n    top: -6,\n    backgroundColor: \"unset\",\n    color: theme.palette.text.primary,\n    \"&:before\": {\n      display: \"none\",\n    },\n  },\n}));\n\nfunction CourseTest() {\n  const [questionNumber, setQuestionNumber] = React.useState(1);\n  const [answer, setAnswer] = React.useState();\n  const [showTimer, setShowTimer] = React.useState(false);\n  const [timer, setTimer] = React.useState();\n\n  const [check1, setCheck1] = React.useState(false);\n  const [check2, setCheck2] = React.useState(false);\n  const [check3, setCheck3] = React.useState(false);\n  const [check4, setCheck4] = React.useState(false);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const detect = useDeviceDetect();\n  const { id } = useParams();\n\n  const { t } = useTranslation();\n\n  const { question, questionCount, isLoading } = useSelector(\n    (state) => state.coursesReducer,\n  );\n\n  const progress =\n    Math.round(100 / (questionCount?.total_course_que || 0)) || 0;\n\n  useEffect(() => {\n    dispatch(getUserTestQuestion(id, history));\n    dispatch(testCountSummery(id, history));\n    if (detect.isMobile) {\n      toast.error(t(\"error.mobile.1\"));\n      history.push(routingConstants.HOME_PAGE);\n    }\n  }, [history, detect.isMobile, id, dispatch, t]);\n\n  useEffect(() => {\n    if (question) {\n      if (question?.answer === question?.optionA) {\n        setCheck1(true);\n        setCheck2(false);\n        setCheck3(false);\n        setCheck4(false);\n        setAnswer(question?.answer);\n      } else if (question?.answer === question?.optionB) {\n        setCheck2(true);\n        setCheck1(false);\n        setCheck3(false);\n        setCheck4(false);\n        setAnswer(question?.answer);\n      } else if (question?.answer === question?.optionC) {\n        setCheck3(true);\n        setCheck1(false);\n        setCheck2(false);\n        setCheck4(false);\n        setAnswer(question?.answer);\n      } else if (question?.answer === question?.optionD) {\n        setCheck4(true);\n        setCheck1(false);\n        setCheck2(false);\n        setCheck3(false);\n        setAnswer(question?.answer);\n      } else {\n        setCheck1(false);\n        setCheck2(false);\n        setCheck3(false);\n        setCheck4(false);\n      }\n    }\n  }, [\n    question,\n    question?.answer,\n    question?.optionA,\n    question?.optionB,\n    question?.optionC,\n    question?.optionD,\n  ]);\n\n  React.useEffect(() => {\n    dispatch(testCountSummery(id, history));\n  }, [dispatch, history, id]);\n\n  React.useEffect(() => {\n    if (questionCount && questionCount?.counse_time > 0) {\n      setTimer(parseInt(questionCount?.counse_time, 10) * 60000);\n      setShowTimer(true);\n    }\n  }, [questionCount, questionCount?.counse_time]);\n\n  const handleNextQuestion = () => {\n    const data = {\n      answer,\n      course_test: question?.id,\n    };\n    const newProgress = (questionCount?.user_course_test_count + 1) * progress;\n\n    if (answer) {\n      setQuestionNumber((prev) => prev + 1);\n      dispatch(postAnswer(data, history, id, false));\n      setAnswer(\"\");\n      if (question?.answer) {\n        dispatch(getUserTestQuestion(id, history, question?.next_module));\n      } else {\n        dispatch(\n          getUserTestQuestion(id, history, question?.next_module, newProgress),\n        );\n      }\n    } else {\n      toast.error(t(\"error.other.1\"), {\n        position: \"bottom-center\",\n      });\n    }\n  };\n\n  const handleFinishQuestion = () => {\n    const data = {\n      answer,\n      course_test: question?.id,\n    };\n    if (answer) {\n      dispatch(postAnswer(data, history, id, true));\n      setAnswer(\"\");\n    } else {\n      toast.error(t(\"error.other.1\"), {\n        position: \"bottom-center\",\n      });\n    }\n  };\n\n  const handlePrevQuestion = () => {\n    if (questionNumber > 1) setQuestionNumber((prev) => prev - 1);\n    dispatch(getUserTestQuestion(id, history, question?.prev_module, 0));\n  };\n\n  const renderProgress = (count = 0) => {\n    return (\n      <IOSSlider\n        aria-label='ios slider'\n        className={\n          (question?.progress <= 33 && \"red1-progress\") ||\n          (question?.progress <= 60 && \"yellow1-progress\") ||\n          (question?.progress <= 100 && \"green1-progress\")\n        }\n        value={count}\n        valueLabelFormat={(value) => <div>{value}%</div>}\n        valueLabelDisplay='on'\n        disabled\n      />\n    );\n  };\n\n  const handleTestFinished = () => {\n    dispatch(endTest(id));\n    toast.error(t(\"error.other.2\"));\n    history.push(routingConstants.COURSES_RESULT + id);\n  };\n\n  const renderTimmer = (value) => {\n    return (\n      <Timer\n        initialTime={value}\n        checkpoints={[\n          {\n            time: 0,\n            callback: () => handleTestFinished(),\n          },\n        ]}\n        direction='backward'\n      >\n        {() => (\n          <>\n            <Timer.Hours /> :\n            <Timer.Minutes />:\n            <Timer.Seconds />\n          </>\n        )}\n      </Timer>\n    );\n  };\n\n  const handleAnswerCheck = (e) => {\n    setAnswer(e.target.labels[0].children[1].innerText);\n    if (e.target.value === \"1\") {\n      setCheck1(true);\n      setCheck2(false);\n      setCheck3(false);\n      setCheck4(false);\n    } else if (e.target.value === \"2\") {\n      setCheck1(false);\n      setCheck2(true);\n      setCheck3(false);\n      setCheck4(false);\n    } else if (e.target.value === \"3\") {\n      setCheck1(false);\n      setCheck2(false);\n      setCheck3(true);\n      setCheck4(false);\n    } else if (e.target.value === \"4\") {\n      setCheck1(false);\n      setCheck2(false);\n      setCheck3(false);\n      setCheck4(true);\n    }\n  };\n\n  return (\n    <div>\n      <Header loginPage={true} page='courses' />\n      <Container>\n        <div className='maindiv_prog'>\n          <Row className='pt-md-5 pb-md-5'>\n            <Col md={12} xs={12} className='text-left'>\n              <div className='circular_progress_module'>\n                <Stack spacing={2} direction='row'>\n                  {\" \"}\n                  <h3>{t(\"coursesPage.coursesModulePage.heading.1\")}</h3>\n                </Stack>\n                {renderProgress(question?.progress)}\n              </div>\n            </Col>\n          </Row>\n        </div>\n\n        <div className='time_set'>\n          <p>\n            <img src={time} alt='' /> {t(\"common.time.5\")}{\" \"}\n            {showTimer && renderTimmer(timer)}\n          </p>\n        </div>\n\n        <Row>\n          <Col md={8} xs={12}>\n            <div className='que_box'>\n              <h2>{t(\"allCertificatePage.other.5\")}</h2>\n              {isLoading ? (\n                <Skeleton></Skeleton>\n              ) : (\n                <p>\n                  {questionNumber}. {question?.question}\n                </p>\n              )}\n              {question && (\n                <RadioGroup name='radio-buttons-group' value={answer}>\n                  {question?.optionA &&\n                    (isLoading ? (\n                      <Skeleton />\n                    ) : (\n                      <FormControlLabel\n                        value='1'\n                        control={\n                          <Radio\n                            checked={check1}\n                            onChange={handleAnswerCheck}\n                          />\n                        }\n                        label={question?.optionA}\n                      />\n                    ))}\n                  {question?.optionB &&\n                    (isLoading ? (\n                      <Skeleton />\n                    ) : (\n                      <FormControlLabel\n                        value='2'\n                        control={\n                          <Radio\n                            checked={check2}\n                            onChange={handleAnswerCheck}\n                          />\n                        }\n                        label={question?.optionB}\n                      />\n                    ))}\n                  {question?.optionC &&\n                    (isLoading ? (\n                      <Skeleton />\n                    ) : (\n                      <FormControlLabel\n                        value='3'\n                        control={\n                          <Radio\n                            checked={check3}\n                            onChange={handleAnswerCheck}\n                          />\n                        }\n                        label={question?.optionC}\n                      />\n                    ))}\n                  {question?.optionD &&\n                    (isLoading ? (\n                      <Skeleton />\n                    ) : (\n                      <FormControlLabel\n                        value='4'\n                        control={\n                          <Radio\n                            checked={check4}\n                            onChange={handleAnswerCheck}\n                          />\n                        }\n                        label={question?.optionD}\n                      />\n                    ))}\n                </RadioGroup>\n              )}\n            </div>{\" \"}\n            <br />\n            <div className='prev_next_btn'>\n              <Row>\n                <Col md={6} xs={6}>\n                  <button\n                    className='back_button'\n                    onClick={() => handlePrevQuestion()}\n                    disabled={!question?.prev_module}\n                  >\n                    {t(\"coursesPage.coursesModulePage.button.1\")}\n                  </button>\n                </Col>\n\n                <Col md={6} xs={6} className='text-right'>\n                  {questionCount?.total_course_que === questionNumber ? (\n                    <button\n                      className='next_button'\n                      onClick={() => handleFinishQuestion()}\n                    >\n                      {t(\"coursesPage.coursesModulePage.button.2\")}\n                    </button>\n                  ) : (\n                    <button\n                      className='next_button'\n                      onClick={() => handleNextQuestion()}\n                    >\n                      {t(\"coursesPage.coursesModulePage.button.3\")}\n                    </button>\n                  )}\n                </Col>\n              </Row>\n            </div>\n          </Col>\n\n          <Col md={4} xs={12}>\n            <div className='que_status'>\n              <h2>{t(\"successCareerTestPage.heading.2\")}</h2>\n              <div className='que_num'>\n                {[...Array(questionCount?.total_course_que).keys()].map(\n                  (obj) => (\n                    <p\n                      id={\n                        obj + 1 <= questionCount?.user_course_test_count\n                          ? \"col_gre\"\n                          : \"col_grey\"\n                      }\n                    >\n                      {obj + 1}\n                    </p>\n                  ),\n                )}\n              </div>\n            </div>\n\n            <div className='ans_not'>\n              <ul>\n                <li>\n                  <span className='dotte1'></span>{\" \"}\n                  {t(\"successCareerTestPage.other.2\")}\n                </li>\n                <li>\n                  <span className='dotte2'></span>{\" \"}\n                  {t(\"successCareerTestPage.other.3\")}\n                </li>\n              </ul>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n      <Footer loginPage={false} />\n    </div>\n  );\n}\n\nexport default CourseTest;\n"],"sourceRoot":""}