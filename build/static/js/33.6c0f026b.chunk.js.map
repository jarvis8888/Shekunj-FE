{"version":3,"sources":["assets/icons/logo.svg","pages/ResetPassword/index.jsx"],"names":["validationSchema","Yup","password","min","required","ResetPassword","isLoading","useSelector","state","authReducer","t","useTranslation","useFormik","initialValues","onSubmit","handleSubmit","handleChange","handleBlur","values","errors","touched","className","src","TitleIcon","alt","htmlFor","name","type","onChange","value","onBlur","autoComplete","error","color"],"mappings":"6HAAe,QAA0B,kC,uDCAzC,6FAWMA,EAAmBC,IAAW,CAClCC,SAAUD,MACPE,IAAI,EAAG,yBACPC,SAAS,0BA+DCC,UA5Df,WACE,IAAQC,EAAcC,aAAY,SAACC,GAAD,OAAWA,EAAMC,eAA3CH,UAEAI,EAAMC,cAAND,EAER,EACEE,YAAU,CACRC,cAAe,CACbX,SAAU,IAEZF,mBACAc,SALQ,eADJC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,aAAcC,EAApC,EAAoCA,WAAYC,EAAhD,EAAgDA,OAAQC,EAAxD,EAAwDA,OAAQC,EAAhE,EAAgEA,QAShE,OACE,mCACE,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAKC,IAAKC,IAAWC,IAAI,UAG3B,sBAAKH,UAAU,WAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BX,EAAE,2BAC/B,sBAAKW,UAAU,MAAf,UACE,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,oBAAf,SACE,uBAAMA,UAAU,WAAWP,SAAUC,EAArC,UACE,sBAAKM,UAAU,MAAf,UACE,wBAAOI,QAAQ,QAAf,UACGf,EAAE,uBADL,IAC6B,wCAE7B,uBACEgB,KAAK,WACLC,KAAK,WACLN,UAAU,aACVO,SAAUZ,EACVa,MAAOX,EAAOhB,SACd4B,OAAQb,EACRc,aAAa,QAEf,cAAC,IAAD,CAAOC,MAAOb,EAAOjB,SAAUkB,QAASA,EAAQlB,cAGlD,wBAAQmB,UAAU,0BAA0BM,KAAK,SAAjD,SACGrB,EACC,cAAC,IAAD,CAAkB2B,MAAM,YAAYZ,UAAU,SAE9CX,EAAE,gCAKV,qBAAKW,UAAU","file":"static/js/33.6c0f026b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.f7da92ab.svg\";","import React from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport { useSelector } from \"react-redux\";\nimport { CircularProgress } from \"@mui/material\";\n\nimport TitleIcon from \"../../assets/icons/logo.svg\";\nimport Error from \"../../components/Error\";\nimport \"./index.scss\";\n\nconst validationSchema = Yup.object({\n  password: Yup.string()\n    .min(6, \"At least 6 characters\")\n    .required(\"Password is required\"),\n});\n\nfunction ResetPassword() {\n  const { isLoading } = useSelector((state) => state.authReducer);\n\n  const { t } = useTranslation();\n\n  const { handleSubmit, handleChange, handleBlur, values, errors, touched } =\n    useFormik({\n      initialValues: {\n        password: \"\",\n      },\n      validationSchema,\n      onSubmit() {},\n    });\n\n  return (\n    <>\n      <div className='container'>\n        <div className='logo_3'>\n          <img src={TitleIcon} alt='...' />\n        </div>\n\n        <div className='main_div'>\n          <h3 className='text-center'>{t(\"resetPassword.heading\")}</h3>\n          <div className='row'>\n            <div className='col-sm-4 col-md-4'></div>\n            <div className='col-sm-4 col-md-4'>\n              <form className='set_form' onSubmit={handleSubmit}>\n                <div className='err'>\n                  <label htmlFor='email'>\n                    {t(\"resetPassword.label\")} <span>*</span>\n                  </label>\n                  <input\n                    name='password'\n                    type='password'\n                    className='w-100 mt-2'\n                    onChange={handleChange}\n                    value={values.password}\n                    onBlur={handleBlur}\n                    autoComplete='off'\n                  />\n                  <Error error={errors.password} touched={touched.password} />\n                </div>\n\n                <button className='w-100 my-4 login-button' type='submit'>\n                  {isLoading ? (\n                    <CircularProgress color='secondary' className='my-2' />\n                  ) : (\n                    t(\"resetPassword.heading\")\n                  )}\n                </button>\n              </form>\n            </div>\n            <div className='col-sm-4 col-md-4'></div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ResetPassword;\n"],"sourceRoot":""}