{"version":3,"sources":["utils/ApiServices.js","utils/toasterCongig.js","store/auth/action.js","components/Error/index.jsx","assets/icons/logo.svg","pages/ForgotPage/ForgotPage.jsx"],"names":["axios","defaults","baseURL","process","withCredentials","responseBody","response","data","interceptors","request","use","config","token","Cookies","get","headers","Authorization","a","error","status","console","log","Promise","reject","requests","url","params","then","post","body","put","patch","delete","postForm","putForm","toasterConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","onLogin","values","history","redirect","dispatch","type","authTypes","LOGIN_REQUEST","httpServices","res","LOGIN_FINISH","payload","name","email","set","tokens","push","LOGIN_FAIL","toast","message","errors","logOut","remove","onSignup","SIGNUP_REQUEST","SIGNUP_FINISH","SIGNUP_FAIL","registerWithGoogle","value","username","access","contactVerify","CONTACT_VERIFY_REQUEST","contact","toString","CONTACT_VERIFY_FINISH","success","CONTACT_VERIFY_FAIL","requestRestEmail","EMAIL_VERIFY_REQUEST","EMAIL_VERIFY_FINISH","EMAIL_VERIFY_FAIL","resetPassword","refreshPage","REFRESH","Error","touched","className","validationSchema","Yup","required","ForgotPage","isLoading","useSelector","state","authReducer","useDispatch","useHistory","useFormik","initialValues","onSubmit","handleSubmit","handleChange","handleBlur","t","useTranslation","src","TitleIcon","alt","htmlFor","onChange","onBlur","autoComplete","color"],"mappings":"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","file":"static/js/29.f8066db7.chunk.js","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.withCredentials = true;\n\nconst responseBody = (response) => response.data;\n\naxios.interceptors.request.use((config) => {\n  const token = Cookies.get(\"sheToken\");\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\naxios.interceptors.response.use(\n  async (response) => {\n    return response;\n  },\n  (error) => {\n    // eslint-disable-next-line\n    const { data, status } = !error.response;\n    switch (status) {\n      case 401:\n        console.log(\"Logout user!\");\n        break;\n      case 403:\n        console.log(\"You are not allowed to do that!\");\n        break;\n      default:\n        break;\n    }\n    return Promise.reject(error.response);\n  },\n);\n\nconst requests = {\n  get: (url, params) => axios.get(url, { params }).then(responseBody),\n  post: (url, body) => axios.post(url, body).then(responseBody),\n  put: (url, body) => axios.put(url, body).then(responseBody),\n  patch: (url, body) => axios.patch(url, body).then(responseBody),\n  delete: (url) => axios.delete(url).then(responseBody),\n  postForm: (url, data) =>\n    axios\n      .post(url, data, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      })\n      .then(responseBody),\n  putForm: (url, data) =>\n    axios\n      .put(url, data, {\n        headers: { \"Content-type\": \"multipart/form-data\" },\n      })\n      .then(responseBody),\n};\n\nexport function createFormData(item) {\n  let formData = new FormData();\n  for (const key in item) {\n    formData.append(key, item[key]);\n  }\n  return formData;\n}\n\nexport default requests;\n","const toasterConfig = {\n  position: \"top-right\",\n  autoClose: 2000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: false,\n  progress: undefined,\n};\n\nexport default toasterConfig;\n","import { authTypes } from \"./types\";\nimport { toast } from \"react-toastify\";\nimport httpServices from \"../../utils/ApiServices\";\nimport toasterConfig from \"../../utils/toasterCongig\";\nimport Cookies from \"js-cookie\";\n\nexport const onLogin = (values, history, redirect) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.LOGIN_REQUEST });\n    const res = await httpServices.post(\"authentication/login/\", values);\n    dispatch({\n      type: authTypes.LOGIN_FINISH,\n      payload: { name: res.data.name, email: res.data.email },\n    });\n    Cookies.set(\"sheToken\", res.data.tokens);\n    if (redirect) {\n      history.push(redirect);\n    }else{\n      history.push('/MyProgress');\n    }\n  } catch (error) {\n    dispatch({ type: authTypes.LOGIN_FAIL });\n    if (error && error.status === 500) {\n      toast.error(error.data.message, toasterConfig);\n    } else if (error && error.status === 400) {\n      toast.error(error.data.errors.error[0], toasterConfig);\n    }\n  }\n};\n\nexport const logOut = (history) => async (dispatch) => {\n  Cookies.remove(\"sheToken\");\n  dispatch({ type: authTypes.LOGIN_FAIL });\n  history.push(\"/login\");\n};\n\nexport const onSignup = (values, history) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.SIGNUP_REQUEST });\n    const res = await httpServices.post(\"authentication/register/\", values);\n    dispatch({ type: authTypes.SIGNUP_FINISH, payload: values });\n    Cookies.set(\"sheToken\", res.data.token);\n    history.push(\"/MyProgress\");\n  } catch (error) {\n    dispatch({ type: authTypes.SIGNUP_FAIL });\n    if (error?.status === 400) {\n      toast.error(error.data.errors.error[0], toasterConfig);\n    } else if (error?.status === 500) {\n      toast.error(\"Not valid OTP\", toasterConfig);\n    }\n  }\n};\n\nexport const registerWithGoogle = (value, history) => async (dispatch) => {\n  try {\n    const res = await httpServices.post(\"social_auth/google/\", value);\n    dispatch({\n      type: authTypes.LOGIN_FINISH,\n      payload: { name: res.data.username, email: res.data.email },\n    });\n    Cookies.set(\"sheToken\", res.data.tokens.access);\n    history.push(\"/MyProgress\");\n  } catch (err) {\n    toast.error(\"Google Login failed.\", toasterConfig);\n  }\n};\n\nexport const contactVerify = (value) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.CONTACT_VERIFY_REQUEST });\n    const res = await httpServices.post(`authentication/user-send-otp/`, {\n      contact: value.contact.toString(),\n    });\n    dispatch({ type: authTypes.CONTACT_VERIFY_FINISH });\n    toast.success(res.message, toasterConfig);\n  } catch (error) {\n    dispatch({ type: authTypes.CONTACT_VERIFY_FAIL });\n    if (error?.status === 400) {\n      toast.error(\"Invalid mobile number.\");\n    }\n  }\n};\n\nexport const requestRestEmail = (values, history) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.EMAIL_VERIFY_REQUEST });\n    const res = await httpServices.post(\n      \"authentication/request-reset-email/\",\n      values,\n    );\n    dispatch({ type: authTypes.EMAIL_VERIFY_FINISH });\n    history.push(\"/login\");\n    toast.success(res.data.success, toasterConfig);\n  } catch (error) {\n    dispatch({ type: authTypes.EMAIL_VERIFY_FAIL });\n    toast.error(\"E-mail not found\", toasterConfig);\n  }\n};\n\nexport const resetPassword = (values, history) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.EMAIL_VERIFY_REQUEST });\n    const res = await httpServices.patch(\n      \"authentication/password-reset-complete/\",\n      values,\n    );\n    dispatch({ type: authTypes.EMAIL_VERIFY_FINISH });\n    history.push(\"/login\");\n    toast.success(res.data.message, toasterConfig);\n  } catch (error) {\n    toast.error(\"Internal Server Error\", toasterConfig);\n  }\n};\n\nexport const refreshPage = () => async (dispatch) => {\n  const token = Cookies.get(\"sheToken\");\n  if (token) {\n    dispatch({ type: authTypes.REFRESH });\n  }\n};\n","import React from \"react\";\nimport \"./index.scss\";\n\nfunction Error({ error, touched }) {\n  return (\n    <>\n      <div className='text-danger err'>{error && touched ? error : null}</div>\n    </>\n  );\n}\n\nexport default Error;\n","export default __webpack_public_path__ + \"static/media/logo.f7da92ab.svg\";","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport TitleIcon from \"../../assets/icons/logo.svg\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { CircularProgress } from \"@mui/material\";\n\nimport Error from \"../../components/Error\";\nimport \"../Common.scss\";\nimport { requestRestEmail } from \"../../store/auth/action\";\n\nconst validationSchema = Yup.object({\n  email: Yup.string().email(\"Invalid emial\").required(\"Email is required\"),\n});\n\nfunction ForgotPage() {\n  const { isLoading } = useSelector((state) => state.authReducer);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { handleSubmit, handleChange, handleBlur, values, errors, touched } =\n    useFormik({\n      initialValues: {\n        email: \"\",\n      },\n      validationSchema,\n      onSubmit(values) {\n        dispatch(requestRestEmail(values, history));\n      },\n    });\n\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <div className='container'>\n        <div className='logo_1'>\n          <img src={TitleIcon} alt='...' />\n        </div>\n\n        <div className='main_div'>\n          <h3 className='text-center'>{t(\"forgot.heading\")}</h3>\n          <div className='row'>\n            <div className='col-sm-4 col-md-4'></div>\n            <div className='col-sm-4 col-md-4'>\n              <form className='set_form' onSubmit={handleSubmit}>\n                <div className='err'>\n                  <label htmlFor='email'>\n                    {t(\"forgot.label\")} <span>*</span>\n                  </label>\n                  <input\n                    name='email'\n                    type='email'\n                    className='w-100 mt-2'\n                    onChange={handleChange}\n                    value={values.email}\n                    onBlur={handleBlur}\n                    autoComplete='off'\n                  />\n                  <Error error={errors.email} touched={touched.email} />\n                </div>\n\n                <button className='w-100 my-4 login-button' type='submit'>\n                  {isLoading ? (\n                    <CircularProgress color='secondary' className='my-2' />\n                  ) : (\n                    t(\"forgot.button\")\n                  )}\n                </button>\n              </form>\n            </div>\n            <div className='col-sm-4 col-md-4'></div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ForgotPage;\n"],"sourceRoot":""}