{"version":3,"sources":["utils/ApiServices.js","utils/toasterCongig.js","store/auth/action.js","assets/icons/logo.svg","pages/VerifyEmailResult/index.jsx"],"names":["axios","defaults","baseURL","process","withCredentials","responseBody","response","data","interceptors","request","use","config","token","Cookies","get","headers","Authorization","a","error","status","console","log","Promise","reject","requests","url","params","then","post","body","put","patch","delete","postForm","putForm","toasterConfig","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","onLogin","values","history","dispatch","type","authTypes","LOGIN_REQUEST","httpServices","res","LOGIN_FINISH","payload","name","email","set","tokens","push","LOGIN_FAIL","toast","errors","non_field_errors","logOut","remove","onSignup","SIGNUP_REQUEST","SIGNUP_FINISH","SIGNUP_FAIL","registerWithGoogle","value","username","access","contactVerify","CONTACT_VERIFY_REQUEST","contact","toString","CONTACT_VERIFY_FINISH","success","message","CONTACT_VERIFY_FAIL","emailVerify","window","location","replace","requestRestEmail","EMAIL_VERIFY_REQUEST","EMAIL_VERIFY_FINISH","EMAIL_VERIFY_FAIL","resetPassword","refreshPage","REFRESH","VerifyEmailResult","useDispatch","URLSearchParams","search","t","useTranslation","useEffect","className","src","ShekujLogo","alt","to"],"mappings":"+LAGAA,IAAMC,SAASC,QAAUC,4BACzBH,IAAMC,SAASG,iBAAkB,EAEjC,IAAMC,EAAe,SAACC,GAAD,OAAcA,EAASC,MAE5CP,IAAMQ,aAAaC,QAAQC,KAAI,SAACC,GAC9B,IAAMC,EAAQC,IAAQC,IAAI,YAE1B,OADIF,IAAOD,EAAOI,QAAQC,cAAf,iBAAyCJ,IAC7CD,KAGTX,IAAMQ,aAAaF,SAASI,IAA5B,+BAAAO,EAAA,MACE,WAAOX,GAAP,SAAAW,EAAA,+EACSX,GADT,2CADF,uDAIE,SAACY,GAEC,OAA0BA,EAAMZ,SAChC,OADA,EAAca,QAEZ,KAAK,IACHC,QAAQC,IAAI,gBACZ,MACF,KAAK,IACHD,QAAQC,IAAI,mCAKhB,OAAOC,QAAQC,OAAOL,EAAMZ,aAIhC,IAAMkB,EAAW,CACfV,IAAK,SAACW,EAAKC,GAAN,OAAiB1B,IAAMc,IAAIW,EAAK,CAAEC,WAAUC,KAAKtB,IACtDuB,KAAM,SAACH,EAAKI,GAAN,OAAe7B,IAAM4B,KAAKH,EAAKI,GAAMF,KAAKtB,IAChDyB,IAAK,SAACL,EAAKI,GAAN,OAAe7B,IAAM8B,IAAIL,EAAKI,GAAMF,KAAKtB,IAC9C0B,MAAQ,SAACN,EAAKI,GAAN,OAAe7B,IAAM+B,MAAMN,EAAKI,GAAMF,KAAKtB,IACnD2B,OAAQ,SAACP,GAAD,OAASzB,IAAMgC,OAAOP,GAAKE,KAAKtB,IACxC4B,SAAU,SAACR,EAAKlB,GAAN,OACRP,IACG4B,KAAKH,EAAKlB,EAAM,CACfQ,QAAS,CAAE,eAAgB,yBAE5BY,KAAKtB,IACV6B,QAAS,SAACT,EAAKlB,GAAN,OACPP,IACG8B,IAAIL,EAAKlB,EAAM,CACdQ,QAAS,CAAE,eAAgB,yBAE5BY,KAAKtB,KAWGmB,O,2YCrDAW,EAVO,CACpBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,G,iBCDCC,EAAU,SAACC,EAAQC,GAAT,8CAAqB,WAAOC,GAAP,eAAA9B,EAAA,sEAExC8B,EAAS,CAAEC,KAAMC,IAAUC,gBAFa,SAGtBC,IAAavB,KAAK,wBAAyBiB,GAHrB,OAGlCO,EAHkC,OAIxCL,EAAS,CACPC,KAAMC,IAAUI,aAChBC,QAAS,CAAEC,KAAMH,EAAI7C,KAAKgD,KAAMC,MAAOJ,EAAI7C,KAAKiD,SAElD3C,IAAQ4C,IAAI,WAAYL,EAAI7C,KAAKmD,QACjCZ,EAAQa,KAAK,KAT2B,kDAWxCZ,EAAS,CAAEC,KAAMC,IAAUW,aACvB,MAA0B,MAAjB,KAAMzC,OACjB0C,IAAM3C,MAAM,KAAMX,KAAKuD,OAAOC,iBAAkB5B,GACvC,MAA0B,MAAjB,KAAMhB,QACxB0C,IAAM3C,MAAM,KAAMX,KAAKuD,OAAO5C,MAAM,GAAIiB,GAfF,0DAArB,uDAoBV6B,EAAS,SAAClB,GAAD,8CAAa,WAAMC,GAAN,SAAA9B,EAAA,sDACjCJ,IAAQoD,OAAO,YACflB,EAAS,CAAEC,KAAMC,IAAUW,aAC3Bd,EAAQa,KAAK,UAHoB,2CAAb,uDAMTO,EAAW,SAACrB,EAAQC,GAAT,8CAAqB,WAAOC,GAAP,eAAA9B,EAAA,sEAEzC8B,EAAS,CAAEC,KAAMC,IAAUkB,iBAFc,SAGvBhB,IAAavB,KAAK,2BAA4BiB,GAHvB,OAGnCO,EAHmC,OAIzCL,EAAS,CAAEC,KAAMC,IAAUmB,cAAed,QAAST,IACnDhC,IAAQ4C,IAAI,WAAYL,EAAI7C,KAAKK,OACjCkC,EAAQa,KAAK,KAN4B,kDAQzCZ,EAAS,CAAEC,KAAMC,IAAUoB,cACL,OAAlB,uCAAOlD,QACT0C,IAAM3C,MAAM,KAAMX,KAAKuD,OAAO5C,MAAM,GAAIiB,GACb,OAAlB,uCAAOhB,SAChB0C,IAAM3C,MAAM,gBAAiBiB,GAZU,0DAArB,uDAiBXmC,EAAqB,SAACC,EAAOzB,GAAR,8CAAoB,WAAOC,GAAP,eAAA9B,EAAA,+EAEhCkC,IAAavB,KAAK,sBAAuB2C,GAFT,OAE5CnB,EAF4C,OAGlDL,EAAS,CACPC,KAAMC,IAAUI,aAChBC,QAAS,CAAEC,KAAMH,EAAI7C,KAAKiE,SAAUhB,MAAOJ,EAAI7C,KAAKiD,SAEtD3C,IAAQ4C,IAAI,WAAYL,EAAI7C,KAAKmD,OAAOe,QACxC3B,EAAQa,KAAK,KARqC,gDAUlDE,IAAM3C,MAAM,uBAAwBiB,GAVc,yDAApB,uDAcrBuC,EAAgB,SAACH,GAAD,8CAAW,WAAOxB,GAAP,eAAA9B,EAAA,sEAGpC8B,EAAS,CAAEC,KAAMC,IAAU0B,yBAHS,SAIlBxB,IAAavB,KAAb,gCAAmD,CAACgD,QAAUL,EAAMK,QAAQC,aAJ1D,OAI9BzB,EAJ8B,OAKpCL,EAAS,CAAEC,KAAMC,IAAU6B,wBAC3BjB,IAAMkB,QAAQ3B,EAAI4B,QAAS7C,GANS,gDASpCY,EAAS,CAAEC,KAAMC,IAAUgC,sBACL,OAAlB,uCAAO9D,SACT0C,IAAM3C,MAAM,0BAXsB,yDAAX,uDAgBhBgE,EAAc,SAACtE,GAAD,8CAAW,WAAOmC,GAAP,eAAA9B,EAAA,+EAEhBkC,IAAarC,IAAb,6CACsBF,IAHN,cAE5BwC,EAF4B,OAKlC+B,OAAOC,SAASC,QAAQ,WALU,kBAM3BjC,GAN2B,gCAQlCS,IAAM3C,QAR4B,yDAAX,uDAYdoE,EAAmB,SAACzC,EAAQC,GAAT,8CAAqB,WAAOC,GAAP,eAAA9B,EAAA,sEAEjD8B,EAAS,CAAEC,KAAMC,IAAUsC,uBAFsB,SAG/BpC,IAAavB,KAC7B,sCACAiB,GAL+C,OAG3CO,EAH2C,OAOjDL,EAAS,CAAEC,KAAMC,IAAUuC,sBAC3B1C,EAAQa,KAAK,UACbE,IAAMkB,QAAQ3B,EAAI7C,KAAKwE,QAAS5C,GATiB,kDAWjDY,EAAS,CAAEC,KAAMC,IAAUwC,oBAC3B5B,IAAM3C,MAAM,mBAAoBiB,GAZiB,0DAArB,uDAgBnBuD,EAAgB,SAAC7C,EAAQC,GAAT,8CAAqB,WAAOC,GAAP,eAAA9B,EAAA,sEAE9C8B,EAAS,CAAEC,KAAMC,IAAUsC,uBAFmB,SAG5BpC,IAAapB,MAC7B,0CACAc,GAL4C,OAGxCO,EAHwC,OAO9CL,EAAS,CAAEC,KAAMC,IAAUuC,sBAC3B1C,EAAQa,KAAK,UACbE,IAAMkB,QAAQ3B,EAAI7C,KAAKyE,QAAS7C,GATc,kDAW9C0B,IAAM3C,MAAM,wBAAyBiB,GAXS,0DAArB,uDAehBwD,EAAc,yDAAM,WAAO5C,GAAP,SAAA9B,EAAA,sDACjBJ,IAAQC,IAAI,aAExBiC,EAAS,CAACC,KAAMC,IAAU2C,UAHG,2CAAN,wD,iCC1HZ,QAA0B,kC,uDCAzC,6EA4CeC,UApCf,WACE,IAAM9C,EAAW+C,cAEXlF,EADW,IAAImF,gBAAgBZ,OAAOC,SAASY,QAC9BlF,IAAI,SAEpBmF,EAAKC,cAALD,EAQP,OANAE,qBAAU,WACRpD,EAASmC,YAAYtE,IAAQe,MAAK,SAACyB,GAC/BhC,QAAQC,IAAI+B,QAEf,CAACxC,EAAMmC,IAGR,mCACE,qBAAKqD,UAAU,YAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,sBACf,sBAAKA,UAAU,oBAAf,UACE,qBAAKC,IAAKC,IAAYC,IAAI,QAC1B,uBACA,oBAAIH,UAAU,cAAd,SAA6BH,EAAE,0BAC/B,sBAAKG,UAAU,cAAf,UACE,qBAAIA,UAAU,OAAd,UACE,4BAAIH,EAAE,2BADR,IACuCA,EAAE,4BAEzC,eAAC,IAAD,CAAMG,UAAU,QAAQI,GAAG,SAA3B,cAAsCP,EAAE,gCAG5C,qBAAKG,UAAU","file":"static/js/23.4580b763.chunk.js","sourcesContent":["import axios from 'axios';\nimport Cookies from \"js-cookie\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.withCredentials = true;\n\nconst responseBody = (response) => response.data;\n\naxios.interceptors.request.use((config) => {\n  const token = Cookies.get('sheToken');\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\naxios.interceptors.response.use(\n  async (response) => {\n    return response;\n  },\n  (error) => {\n    // eslint-disable-next-line\n    const { data, status } = !error.response;\n    switch (status) {\n      case 401:\n        console.log('Logout user!');\n        break;\n      case 403:\n        console.log('You are not allowed to do that!');\n        break;\n      default:\n        break;\n    }\n    return Promise.reject(error.response);\n  },\n);\n\nconst requests = {\n  get: (url, params) => axios.get(url, { params }).then(responseBody),\n  post: (url, body) => axios.post(url, body).then(responseBody),\n  put: (url, body) => axios.put(url, body).then(responseBody),\n  patch : (url, body) => axios.patch(url, body).then(responseBody),\n  delete: (url) => axios.delete(url).then(responseBody),\n  postForm: (url, data) =>\n    axios\n      .post(url, data, {\n        headers: { 'Content-type': 'multipart/form-data' },\n      })\n      .then(responseBody),\n  putForm: (url, data) =>\n    axios\n      .put(url, data, {\n        headers: { 'Content-type': 'multipart/form-data' },\n      })\n      .then(responseBody),\n};\n\nexport function createFormData(item) {\n  let formData = new FormData();\n  for (const key in item) {\n    formData.append(key, item[key]);\n  }\n  return formData;\n}\n\nexport default requests;","const toasterConfig = {\n  position: \"top-right\",\n  autoClose: 2000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: false,\n  progress: undefined,\n};\n\nexport default toasterConfig;\n","import { authTypes } from \"./types\";\nimport { toast } from \"react-toastify\";\nimport httpServices from \"../../utils/ApiServices\";\nimport toasterConfig from \"../../utils/toasterCongig\";\nimport Cookies from \"js-cookie\";\n\nexport const onLogin = (values, history) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.LOGIN_REQUEST });\n    const res = await httpServices.post(\"authentication/login/\", values);\n    dispatch({\n      type: authTypes.LOGIN_FINISH,\n      payload: { name: res.data.name, email: res.data.email },\n    });\n    Cookies.set(\"sheToken\", res.data.tokens);\n    history.push(\"/\");\n  } catch (error) {\n    dispatch({ type: authTypes.LOGIN_FAIL });\n    if (error && error.status === 500) {\n      toast.error(error.data.errors.non_field_errors, toasterConfig);\n    } else if (error && error.status === 400) {\n      toast.error(error.data.errors.error[0], toasterConfig);\n    }\n  }\n};\n\nexport const logOut = (history) => async(dispatch) => {\n  Cookies.remove('sheToken');\n  dispatch({ type: authTypes.LOGIN_FAIL });\n  history.push(\"/login\");\n}\n\nexport const onSignup = (values, history) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.SIGNUP_REQUEST });\n    const res = await httpServices.post(\"authentication/register/\", values);\n    dispatch({ type: authTypes.SIGNUP_FINISH, payload: values });\n    Cookies.set(\"sheToken\", res.data.token);\n    history.push(\"/\");\n  } catch (error) {\n    dispatch({ type: authTypes.SIGNUP_FAIL });\n    if (error?.status === 400) {\n      toast.error(error.data.errors.error[0], toasterConfig);\n    } else if (error?.status === 500) {\n      toast.error(\"Not valid OTP\", toasterConfig);\n    }\n  }\n};\n\nexport const registerWithGoogle = (value, history) => async (dispatch) => {\n  try {\n    const res = await httpServices.post(\"social_auth/google/\", value);\n    dispatch({\n      type: authTypes.LOGIN_FINISH,\n      payload: { name: res.data.username, email: res.data.email },\n    });\n    Cookies.set(\"sheToken\", res.data.tokens.access);\n    history.push(\"/\");\n  } catch (err) {\n    toast.error(\"Google Login failed.\", toasterConfig)\n  }\n};\n\nexport const contactVerify = (value) => async (dispatch) => {\n  try {\n    \n    dispatch({ type: authTypes.CONTACT_VERIFY_REQUEST });\n    const res = await httpServices.post(`authentication/user-send-otp/`, {contact : value.contact.toString()});\n    dispatch({ type: authTypes.CONTACT_VERIFY_FINISH });\n    toast.success(res.message, toasterConfig);\n  } catch (error) {\n    debugger\n    dispatch({ type: authTypes.CONTACT_VERIFY_FAIL });\n    if (error?.status === 400) {\n      toast.error(\"Invalid mobile number.\");\n    }\n  }\n};\n\nexport const emailVerify = (token) => async (dispatch) => {\n  try {\n    const res = await httpServices.get(\n      `authentication/email-verify/?token=${token}`,\n    );\n    window.location.replace(\"success\");\n    return res;\n  } catch (error) {\n    toast.error();\n  }\n};\n\nexport const requestRestEmail = (values, history) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.EMAIL_VERIFY_REQUEST });\n    const res = await httpServices.post(\n      \"authentication/request-reset-email/\",\n      values,\n    );\n    dispatch({ type: authTypes.EMAIL_VERIFY_FINISH });\n    history.push(\"/login\");\n    toast.success(res.data.success, toasterConfig);\n  } catch (error) {\n    dispatch({ type: authTypes.EMAIL_VERIFY_FAIL });\n    toast.error(\"E-mail not found\", toasterConfig);\n  }\n};\n\nexport const resetPassword = (values, history) => async (dispatch) => {\n  try {\n    dispatch({ type: authTypes.EMAIL_VERIFY_REQUEST });\n    const res = await httpServices.patch(\n      \"authentication/password-reset-complete/\",\n      values,\n    );\n    dispatch({ type: authTypes.EMAIL_VERIFY_FINISH });\n    history.push(\"/login\");\n    toast.success(res.data.message, toasterConfig);\n  } catch (error) {\n    toast.error(\"Internal Server Error\", toasterConfig);\n  }\n};\n\nexport const refreshPage = () => async (dispatch) => {\n  const token = Cookies.get(\"sheToken\");\n  if(token){\n    dispatch({type: authTypes.REFRESH})\n  }\n};\n","export default __webpack_public_path__ + \"static/media/logo.f7da92ab.svg\";","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport ShekujLogo from \"../../assets/icons/logo.svg\";\nimport { emailVerify } from \"../../store/auth/action\";\nimport { useTranslation } from \"react-i18next\";\nimport './index.scss'\n\nfunction VerifyEmailResult() {\n  const dispatch = useDispatch();\n  const urlParam = new URLSearchParams(window.location.search);\n  const token = urlParam.get(\"token\");\n\n  const {t} = useTranslation();\n\n  useEffect(() => {\n    dispatch(emailVerify(token)).then((res) => {\n        console.log(res);\n    });\n  }, [token,dispatch]);\n\n  return (\n    <>\n      <div className='container'>\n        <div className='row my-5'>\n          <div className='col-sm-2 col-md-2'></div>\n          <div className='col-sm-8 col-md-8'>\n            <img src={ShekujLogo} alt='...' />\n            <hr />\n            <h2 className='text-center'>{t('verifyResult.heading')}</h2>\n            <div className='text-center'>\n              <h6 className='my-5'>\n                <b>{t('verifyResult.heading1')}</b> {t('verifyResult.heading2')}\n              </h6>\n              <Link className='logIn' to='/login'> {t('verifyResult.button')}</Link>\n            </div>\n          </div>\n          <div className='col-sm-2 col-md-2'></div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default VerifyEmailResult;\n"],"sourceRoot":""}